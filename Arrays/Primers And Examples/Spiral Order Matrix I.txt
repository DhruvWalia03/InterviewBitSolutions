/*
This Solution is By Dhruv Walia

Asked in:  
Microsoft
JP Morgan
Amazon
Flipkart
Adobe

Given a matrix of m * n elements (m rows, n columns), return all elements of the matrix in spiral order.

Example:

Given the following matrix:

[
    [ 1, 2, 3 ],
    [ 4, 5, 6 ],
    [ 7, 8, 9 ]
]
You should return

[1, 2, 3, 6, 9, 8, 7, 4, 5]

Solution is below:
*/

vector<int> Solution::spiralOrder(const vector<vector<int> > &a) {
    
    vector<int> ans;
    int i,j,k,x,l,m,n;
    j = 0; k = 0;
    m = a.size();
    n = a[0].size();
    int visited[m][n];
    memset(visited,0,sizeof(visited));
    ans.push_back(a[0][0]);
    visited[0][0] = 1;
    for(x=0;x<m+n-1;x++)
    {
        if(x%4==0)
        {
            for(i=j+1;i<n;i++)
            {
                if(visited[k][i] == 0)
                    visited[k][i] = 1,ans.push_back(a[k][i]);
                else break;
            }
            j = i-1;
        }
        else if(x%4==1)
        {
            for(i=k+1;i<m;i++)
            {
                if(visited[i][j] == 0)
                    visited[i][j] = 1,ans.push_back(a[i][j]);
                else break;
            }
            k = i-1;
        }
        else if(x%4==2)
        {
            for(i=j-1;i>=0;i--)
            {
                if(visited[k][i] == 0)
                    visited[k][i] = 1,ans.push_back(a[k][i]);
                else break;
            }
            j = i+1;
        }
        else
        {
            for(i=k-1;i>=0;i--)
            {
                if(visited[i][j] == 0)
                    visited[i][j] = 1,ans.push_back(a[i][j]);
                else break;
            }
            k = i+1;
        }
    }
    return ans;
}
