/*
This Solution is By Dhruv Walia

Given a sorted array of integers, find the number of occurrences of a given target value.
Your algorithmâ€™s runtime complexity must be in the order of O(log n).
If the target is not found in the array, return 0

**Example : **
Given [5, 7, 7, 8, 8, 10] and target value 8,
return 2.

Solution is below: 
*/

int Solution::findCount(const vector<int> &A, int B) {
 
    int low =0,high=A.size()-1,ans = 0;
    while(low<=high)
    {
        int mid = (low + high)/2;
        if(A[mid] == B)
        {
            ans++;
            low = mid-1;
            high = mid+1;
            while(low>=0 && A[low--] == B)
                ans++;
            while(high<A.size() && A[high++] == B)
                ans++;
            break;
        }
        else if(A[mid] < B)
            low = mid+1;
        else high = mid-1;
    }
    return ans;
}