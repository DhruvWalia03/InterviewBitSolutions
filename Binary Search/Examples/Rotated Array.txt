/*
This Solution is By Dhruv Walia

Asked in:  
Facebook

Suppose a sorted array A is rotated at some pivot unknown to you beforehand.

(i.e., 0 1 2 4 5 6 7 might become 4 5 6 7 0 1 2).

Find the minimum element.
Also think about the case when there are duplicates. 
Does your current solution work? 
How does the time complexity change?

Solution is below: 
*/

int Solution::findMin(const vector<int> &A) {
 
    int l=0,h=A.size()-1;
    while(l<h)
    {
        int mid = (l+h)/2;
        if(A[mid] > A[h])
            l = mid+1;
        else h = mid;
    }
    return A[(l+h)/2];
}