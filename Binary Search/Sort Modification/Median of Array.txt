/*
This Solution is By Dhruv Walia

Asked in:  
Amazon
VMWare
Google
Microsoft
Goldman Sachs

There are two sorted arrays A and B of size m and n respectively.

Find the median of the two sorted arrays ( The median of the array formed by merging both the arrays ).

The overall run time complexity should be O(log (m+n)).

Sample Input
A : [1 4 5]
B : [2 3]

Sample Output
3

NOTE: IF the number of elements in the merged array is even, then the median is the average of n / 2 th and n/2 + 1th element.
For example, if the array is [1 2 3 4], the median is (2 + 3) / 2.0 = 2.5 

Solution is below: 
*/

double Solution::findMedianSortedArrays(const vector<int> &A, const vector<int> &B) 
{ 
    if (A.size() == 0 && B.size() == 0) 
        return -1;
    int n1 = A.size(), n2 = B.size(),i,j,l,h,m,flag = 0;
    if (n2 < n1) 
        return findMedianSortedArrays(B, A);
    if((n1+n2)%2 == 1)
        flag = 1;
    l = 0; h = n1; j = (n1+n2+1)/2;
    while(l<=h)
    {
        int m1 = (l+h)/2;
        int m2 = j-m1;
        if(m1<n1 && A[m1] < B[m2-1])
            l = m1+1;
        else if(m1>0 && A[m1-1] > B[m2])
            h = m1;
        else
        {
            int ml = (m1 == 0)? B[m2-1]:((m2 == 0)? A[m1-1]:max(A[m1-1],B[m2-1]));
            if(flag)
                return ml;
            int mr = (m1 == n1)? B[m2]:((m2 == n2)? A[m1]:min(A[m1],B[m2]));
            return (ml+mr)/2.0;
        }
    }
    return -1;
}