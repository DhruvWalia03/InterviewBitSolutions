/*
This Solution is By Dhruv Walia

Asked in:  
Microsoft
Google

Given two numbers represented as strings, return multiplication of the numbers as a string.

 Note: The numbers can be arbitrarily large and are non-negative.
Note2: Your answer should not have leading zeroes. For example, 00 is not a valid answer. 
For example,
given strings "12", "10", your answer should be “120”.

NOTE : DO NOT USE BIG INTEGER LIBRARIES ( WHICH ARE AVAILABLE IN JAVA / PYTHON ).
We will retroactively disqualify such submissions and the submissions will incur penalties.

Solution is below: 
*/

string add(string A, string B) 
{
    int n = A.length(),m = B.length(),i;
    string ans = "";
    reverse(A.begin(),A.end());
    reverse(B.begin(),B.end()); 
    int x,y,c=0;
    for(i = 0;i<min(n,m);i++)
    {
        x = A[i]-'0';
        y = B[i]-'0';
        int sum = x+y+c;
        ans += (sum%10+'0');
        c=sum/10;
    }
    for(;i<max(n,m);i++)
    {
        if(max(n,m) == n)
            x = A[i]-'0',y = 0;
        else
            y = B[i]-'0',x = 0;
        int sum = x+y+c;
        ans += (sum%10+'0');
        c=sum/10;
    }
    while(c > 0)
        ans += (c%10+'0'),c /= 10;
    reverse(ans.begin(),ans.end());
    return ans;
}

string Solution::multiply(string n1, string n2) {
    if(n1.length() > n2.length())
        n1.swap(n2);

// we will multiply numbers character wise as in digital electronics

    string result = "0";
    for(int i=n1.length()-1; i>=0; --i)
    {
        string temp = n2;
        int currentDigit = n1[i]-'0';
        int carry = 0;

        for(int j = temp.length()-1; j>=0; --j)
        {
            temp[j] = ((temp[j]-'0')*currentDigit) + carry;

            if(temp[j] > 9)
                carry = (temp[j]/10), temp[j] = (temp[j]%10);
            else carry = 0;

            temp[j] += '0'; //back to string mode
        }

        if(carry > 0)
            temp.insert(0,1,carry+'0');
        temp.append((n1.length()-i-1),'0');
        result = add(result, temp);

    }
    while(result[0]=='0' && result.length()>1) // erase the leading zeros
        result.erase(0,1);

    return result;
}