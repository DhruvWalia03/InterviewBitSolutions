/*
This Solution is By Dhruv Walia

Asked In:
AMAZON

Given a binary search tree, write a function to find the kth smallest element in the tree.

Example :
 Input : 
   2
  / \
 1   3

 and k = 2
Return : 2

As 2 is the second smallest element in the tree.
NOTE : You may assume 1 <= k <= Total number of nodes in BST

Solution is below: 
*/

/**
 * Definition for binary tree
 * struct TreeNode {
 *     int val;
 *     TreeNode *left;
 *     TreeNode *right;
 *     TreeNode(int x) : val(x), left(NULL), right(NULL) {}
 * };
 */

vector<int> ans;
void inorder(TreeNode *A)
{
    if(A == NULL)
        return;
    inorder(A->left);
    ans.push_back(A->val);
    inorder(A->right);
}

int Solution::kthsmallest(TreeNode* A, int B) {
    
    ans.clear();
    inorder(A);
    return ans[B-1];
}