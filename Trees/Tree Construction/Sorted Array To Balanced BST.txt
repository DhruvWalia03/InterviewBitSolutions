/*
This Solution is By Dhruv Walia

Asked In:
VMWARE
AMAZON

Given an array where elements are sorted in ascending order, convert it to a height balanced BST.
Balanced tree : a height-balanced binary tree is defined as a binary tree in which the depth of the two subtrees of every node never differ by more than 1.

Example :
   Given A : [1, 2, 3]
A height balanced BST  : 
      2
    /   \
   1     3

Solution is below: 
*/

/**
 * Definition for binary tree
 * struct TreeNode {
 *     int val;
 *     TreeNode *left;
 *     TreeNode *right;
 *     TreeNode(int x) : val(x), left(NULL), right(NULL) {}
 * };
 */
vector<TreeNode*> v;
TreeNode* func(int start,int end)
{
    if(start > end)
        return NULL;
    if(start == end)
    {
        v[start]->left = NULL;
        v[start]->right = NULL;
        return v[start];
    }
    int x = start + (end-start+1)/2;
    v[x]->left = func(start,x-1);
    v[x]->right = func(x+1,end);
    return v[x];
}

TreeNode* Solution::sortedArrayToBST(const vector<int> &A) {
    v.clear();
    for(auto f:A)
    {
        TreeNode *t = new TreeNode(f);
        v.push_back(t);
    }
    int i,n = A.size();
    return func(0,n-1);
}
