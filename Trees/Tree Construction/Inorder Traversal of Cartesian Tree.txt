/*
This Solution is By Dhruv Walia

Asked In:
AMAZON

Given an inorder traversal of a cartesian tree, construct the tree.
Cartesian tree :  is a heap ordered binary tree, where the root is greater than all the elements in the subtree.
Note: You may assume that duplicates do not exist in the tree.

Example :
  Input : [1 2 3]
Return :   
          3
         /
        2
       /
      1

Solution is below: 
*/

/**
 * Definition for binary tree
 * struct TreeNode {
 *     int val;
 *     TreeNode *left;
 *     TreeNode *right;
 *     TreeNode(int x) : val(x), left(NULL), right(NULL) {}
 * };
 */
TreeNode* makeCart(vector<int> &A, int start, int end){
    if(start > end)
        return NULL;
    int max = A[start],index = start;
    for(int i = start; i <= end; i++)
    {
        if(max < A[i])
            max = A[i],index = i;
    }    
    TreeNode* root = new TreeNode(A[index]);
    root->left = makeCart(A, start, index-1);
    root->right = makeCart(A, index+1, end);
    return root;
}


TreeNode* Solution::buildTree(vector<int> &A) {

    return makeCart(A,0,A.size()-1);
}