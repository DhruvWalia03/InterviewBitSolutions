/*
This Solution is By Dhruv Walia

Asked In:
MICROSOFT
YAHOO
AMAZON

Given a binary tree and a sum, determine if the tree has a root-to-leaf path such that adding up all the values along the path equals the given sum.

Example :
Given the below binary tree and sum = 22,
              5
             / \
            4   8
           /   / \
          11  13  4
         /  \      \
        7    2      1
return true, as there exist a root-to-leaf path 5->4->11->2 which sum is 22.

Return 0 / 1 ( 0 for false, 1 for true ) for this problem

Solution is below: 
*/

/**
 * Definition for binary tree
 * struct TreeNode {
 *     int val;
 *     TreeNode *left;
 *     TreeNode *right;
 *     TreeNode(int x) : val(x), left(NULL), right(NULL) {}
 * };
 */
int ans;
void height(TreeNode *A,int B,int cnt)
{
    if(A == NULL)
        return ;
    if(A->left == NULL && A->right == NULL)
    {
        cnt += A->val;
        if(cnt == B)
            ans = 1;
        return;
    }
    height(A->left,B,cnt+A->val);
    height(A->right,B,cnt+A->val);
}

int Solution::hasPathSum(TreeNode* A, int B) {
    ans = 0;
    height(A,B,0);
    return ans;
}