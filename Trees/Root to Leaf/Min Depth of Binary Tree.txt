/*
This Solution is By Dhruv Walia

Asked In:
FACEBOOK
AMAZON

Given a binary tree, find its minimum depth.
The minimum depth is the number of nodes along the shortest path from the root node down to the nearest leaf node.
NOTE : The path has to end on a leaf node.

Example :
         1
        /
       2
min depth = 2.

Solution is below: 
*/

/**
 * Definition for binary tree
 * struct TreeNode {
 *     int val;
 *     TreeNode *left;
 *     TreeNode *right;
 *     TreeNode(int x) : val(x), left(NULL), right(NULL) {}
 * };
 */
int ans;
void height(TreeNode *A,int cnt)
{
    if(A == NULL)
        return ;
    if(A->left == NULL && A->right == NULL)
    {
        ans = min(cnt+1,ans);
        return;
    }
    height(A->left,cnt+1);
    height(A->right,cnt+1);
}

int Solution::minDepth(TreeNode* A) {
    ans = INT_MAX;
    height(A,0);
    return ans;
}