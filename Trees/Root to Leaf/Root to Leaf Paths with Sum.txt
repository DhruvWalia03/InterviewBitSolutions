/*
This Solution is By Dhruv Walia

Asked In:
MICROSOFT
YAHOO
AMAZON

Given a binary tree and a sum, find all root-to-leaf paths where each pathâ€™s sum equals the given sum.
For example:
Given the below binary tree and sum = 22,

              5
             / \
            4   8
           /   / \
          11  13  4
         /  \    / \
        7    2  5   1
return
[
   [5,4,11,2],
   [5,8,4,5]
]

Solution is below: 
*/

/**
 * Definition for binary tree
 * struct TreeNode {
 *     int val;
 *     TreeNode *left;
 *     TreeNode *right;
 *     TreeNode(int x) : val(x), left(NULL), right(NULL) {}
 * };
 */
vector<int> v;
vector<vector<int> > ans;
void height(TreeNode *A,int B,int cnt)
{
    if(A == NULL)
        return ;
    if(A->left == NULL && A->right == NULL)
    {
        cnt += A->val;
        v.push_back(A->val);
        if(cnt == B)
            ans.push_back(v);
        v.pop_back();
        return;
    }
    v.push_back(A->val);
    height(A->left,B,cnt+A->val);
    height(A->right,B,cnt+A->val);
    v.pop_back();
}

vector<vector<int> > Solution::pathSum(TreeNode* A, int B) {
    ans.clear();
    v.clear();
    height(A,B,0);
    return ans;
}