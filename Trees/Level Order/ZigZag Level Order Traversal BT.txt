/*
This Solution is By Dhruv Walia

Asked In:
AMAZON
MICROSOFT

Given a binary tree, return the zigzag level order traversal of its nodesâ€™ values. (ie, from left to right, then right to left for the next level and alternate between).

Example : 
 Given binary tree
    3
   / \
  9  20
    /  \
   15   7
 return
 [
         [3],
         [20, 9],
         [15, 7]
 ]

Solution is below: 
*/

/**
 * Definition for binary tree
 * struct TreeNode {
 *     int val;
 *     TreeNode *left;
 *     TreeNode *right;
 *     TreeNode(int x) : val(x), left(NULL), right(NULL) {}
 * };
 */
vector<vector<int> > Solution::zigzagLevelOrder(TreeNode* A) {
    
    vector<vector<int>> ans;
    vector<int> v;
    if(A == NULL)
        return ans;
    queue<pair<TreeNode*,int> > q;
    q.push({A,1});
    int k = 1;
    while(!q.empty())
    {
        TreeNode *curr = q.front().first;
        int x = q.front().second;
        q.pop();
        if(k+1 == x)
        {
            if(k%2 == 1)
                ans.push_back(v);
            else 
            {
                reverse(v.begin(),v.end());
                ans.push_back(v);
            }
            v.clear();
            k++;
        }
        v.push_back(curr->val);
        if(curr -> left != NULL)
            q.push({curr->left,x+1});
        if(curr -> right != NULL)
            q.push({curr->right,x+1});
    }
    if(k%2 == 1)
        ans.push_back(v);
    else 
    {
        reverse(v.begin(),v.end());
        ans.push_back(v);
    }
    return ans;
}