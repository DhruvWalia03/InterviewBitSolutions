/*
This Solution is By Dhruv Walia

Asked In:
DE SHAW
THOUGHTWORKS

Problem Description

Given a binary tree A of integers. Return an array of integers representing the right view of the Binary tree.
Right view of a Binary Tree: is a set of nodes visible when the tree is visited from Right side.

Input 1:
        1
      /   \
     2    3
    / \  / \
   4   5 6  7
  /
 8 

Output 1:
 [1, 3, 7, 8]

Solution is below: 
*/

/**
 * Definition for binary tree
 * struct TreeNode {
 *     int val;
 *     TreeNode *left;
 *     TreeNode *right;
 *     TreeNode(int x) : val(x), left(NULL), right(NULL) {}
 * };
 */
vector<int> Solution::solve(TreeNode* A) {
    
    vector<int> v,ans;
    if(A == NULL)
        return ans;
    queue<pair<TreeNode*,int> > q;
    q.push({A,1});
    int k = 1;
    while(!q.empty())
    {
        TreeNode *curr = q.top().first;
        int x = q.top().second;
        q.pop();
        if(k+1 == x)
        {
            ans.push_back(v[v.size()-1]);
            k++;
            v.clear();
        }
        v.push_back(A->val);
        if(curr -> left != NULL)
            q.push({curr->left,x+1});
        if(curr -> right != NULL)
            q.push({curr->right,x+1});
    }
    ans.push_back(v[v.size()-1]);
    return ans;
}