/*
This Solution is By Dhruv Walia

Asked in:  
Amazon
Microsoft

Given a singly linked list, determine if its a palindrome. Return 1 or 0 denoting if its a palindrome or not, respectively.

Notes:
Expected solution is linear in time and constant in space.
For example,

List 1-->2-->1 is a palindrome.
List 1-->2-->3 is not a palindrome.

Solution is below: 
*/

/**
 * Definition for singly-linked list.
 * struct ListNode {
 *     int val;
 *     ListNode *next;
 *     ListNode(int x) : val(x), next(NULL) {}
 * };
 */
 int Solution::lPalin(ListNode* A) {
    
    if(A == NULL || A->next == NULL)
        return 1;
    ListNode *curr = A,*prev = NULL, *nex = A->next;
    int n = 0;
    while(curr != NULL)
    {
        n++;
        curr = curr->next;
    }
    int i = 0;
    curr = A;
    while(i<n/2)
    {
        i++;
        curr->next = prev;
        prev = curr;
        curr = nex;
        nex = nex->next;
    }
    if(n%2 == 1)
        curr = curr->next;
    while(prev != NULL && curr != NULL && prev->val == curr->val)
    {
        prev = prev->next;
        curr = curr->next;
    }
    if(prev == NULL && curr == NULL)
        return 1;
    return 0;
}
