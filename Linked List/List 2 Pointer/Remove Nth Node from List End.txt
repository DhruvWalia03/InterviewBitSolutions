/*
This Solution is By Dhruv Walia

Asked in:  
HCL
Amazon

Given a linked list, remove the nth node from the end of list and return its head.

For example,
Given linked list: 1->2->3->4->5, and n = 2.
After removing the second node from the end, the linked list becomes 1->2->3->5.

 Note:
If n is greater than the size of the list, remove the first node of the list.

Solution is below: 
*/

/**
 * Definition for singly-linked list.
 * struct ListNode {
 *     int val;
 *     ListNode *next;
 *     ListNode(int x) : val(x), next(NULL) {}
 * };
 */
ListNode* Solution::removeNthFromEnd(ListNode* A, int n) {

    int m = 0;
    ListNode *curr = A, *prev = NULL;
    while(curr != NULL)
    {
        m++;
        curr = curr->next;
    }
    if(n >= m)
        return A->next;
    n = m-n+1;
    curr = A;
    while(n > 1)
    {
        n--;
        prev = curr;
        curr = curr ->next;
    }
    prev->next = curr->next;
    return A;
}