/*
This Solution is By Dhruv Walia

Asked In:
AMAZON
LEANAPPS

Problem Description

Given a linked list A of length N and an integer B.
You need to reverse every alternate B nodes in the linked list A.

Input 1:
 A = 3 -> 4 -> 7 -> 5 -> 6 -> 6 -> 15 -> 61 -> 16
 B = 3

Output 1:
 7 -> 4 -> 3 -> 5 -> 6 -> 6 -> 16 -> 61 -> 15

Explanation 1:
 The linked list contains 9 nodes and we need to reverse alternate 3 nodes.
 First sublist of length 3  is 3 -> 4 -> 7 so on reversing it we get 7 -> 4 -> 3.
 Second sublist of length 3 is 5 -> 6 -> 6 we don't need to reverse it.
 Third sublist of length 3 is 15 -> 61 -> 16 so on reversing it we get 16 -> 61 -> 15.

Solution is below: 
*/

/**
 * Definition for singly-linked list.
 * struct ListNode {
 *     int val;
 *     ListNode *next;
 *     ListNode(int x) : val(x), next(NULL) {}
 * };
 */

ListNode* reverse(ListNode* A,int k) {

    ListNode *curr = A;
    if(curr == NULL || curr->next == NULL)
        return A;
    ListNode *prev = NULL, *nex = A->next;
    int x = 0;
    while(curr != NULL && x<k)
    {
        curr -> next = prev;
        prev = curr;
        curr = nex;
        x++;
        if(nex != NULL)
            nex = nex->next;
    }
    return prev;
}

ListNode* Solution::solve(ListNode* A, int k) {

    if(A == NULL || A->next == NULL || k == 1)
        return A;
    ListNode *curr = A, *nex = A->next,*temp = NULL, *head = NULL, *ctemp = NULL;
    int x = 0,y = 0;
    while(nex != NULL)
    {
        if(x == k-1)
        {
            if(y%2 == 0)
            {
                ListNode *rev = reverse(ctemp,k);
                if(temp == NULL)
                    temp = ctemp,head = rev;
                else
                    temp->next = rev,temp = ctemp;
            }
            else
                temp->next = ctemp,temp = curr;
            x = -1;
            y++;
        }
        if(x == 0)
            ctemp = curr;
        x++;
        curr = nex;
        nex = nex->next;
    }
    if(y%2 == 0)
    {
        ListNode *rev = reverse(ctemp,k);
        if(temp == NULL)
            temp = ctemp,head = rev;
        else
            temp -> next = rev,temp = ctemp;
    }
    else
        temp->next = ctemp,temp = curr;
    return head;
}