/*
This Solution is By Dhruv Walia

Asked in:  
Amazon
hotstar

Problem Description

Given a binary array A and a number B, we need to find length of the longest subsegment of ‘1’s possible by changing at most B ‘0’s.

Input 1:
 A = [1, 0, 0, 1, 1, 0, 1]
 B = 1
Output 1:
 4
Explanation 1:
 Here, we should only change 1 zero(0). Maximum possible length we can get is by changing the 3rd zero in the array,
 we get a[] = {1, 0, 0, 1, 1, 1, 1}

Solution is below: 
*/

int Solution::solve(vector<int> &A, int B) {

    int i,j,n=A.size(),ans = 0,cnt = B;
    if(n == 0)
        return 0;
    j = 0;
    for(i=0;i<n;i++)
    {
        if(A[i] == 0)
            cnt--;
        while(cnt < 0)
        {
            if(A[j] == 0)
                cnt++;
            j++;
        }
        ans = max(ans,i-j+1);
    }
    return ans;
}