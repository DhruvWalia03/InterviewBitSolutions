/*
This Solution is By Dhruv Walia

Asked In:
YAHOO
GOOGLE
FACEBOOK

Evaluate the value of an arithmetic expression in Reverse Polish Notation.
Valid operators are +, -, *, /. Each operand may be an integer or another expression.

Input 1:
    A =   ["2", "1", "+", "3", "*"]
Output 1:
    9
Explaination 1:
    starting from backside:
    *: ( )*( )
    3: ()*(3)
    +: ( () + () )*(3)
    1: ( () + (1) )*(3)
    2: ( (2) + (1) )*(3)
    ((2)+(1))*(3) = 9
    
Input 2:
    A = ["4", "13", "5", "/", "+"]
Output 2:
    6
Explaination 2:
    +: ()+()
    /: ()+(() / ())
    5: ()+(() / (5))
    1: ()+((13) / (5))
    4: (4)+((13) / (5))
    (4)+((13) / (5)) = 6

Solution is below: 
*/

int Solution::evalRPN(vector<string> &A) {

    stack <int> s;
    int i,n = A.size(),ans = 0;
    for(i=0;i<n;i++)
    {
        if(A[i] == "*")
        {
            int x = s.top();s.pop();
            int y = s.top();s.pop();
            s.push(x*y);
        }
        else if(A[i] == "+")
        {
            int x = s.top();s.pop();
            int y = s.top();s.pop();
            s.push(x+y);
        }
        else if(A[i] == "-")
        {
            int x = s.top();s.pop();
            int y = s.top();s.pop();
            s.push(y-x);
        }
        else if(A[i] == "/")
        {
            int x = s.top();s.pop();
            int y = s.top();s.pop();
            s.push(y/x);
        }
        else
        {
            int x = stoi(A[i]);
            s.push(x);
        }
    }
    return s.top();
}
