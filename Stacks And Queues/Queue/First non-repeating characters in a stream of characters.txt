/*
This Solution is By Dhruv Walia

Asked In:
AMAZON
FLIPKART

Problem Description

Given a string A denoting a stream of lowercase alphabets. You have to make new string B.
B is formed such that we have to find first non-repeating character each time a character is inserted to the stream and append it at the end to B. If no non-repeating character is found then append '#' at the end of B.

Input 1:
 A = "abadbc"
Output 1:
 "aabbdd"

Explanation 1:
    "a"      -   first non repeating character 'a'
    "ab"     -   first non repeating character 'a'
    "aba"    -   first non repeating character 'b'
    "abad"   -   first non repeating character 'b'
    "abadb"  -   first non repeating character 'd'
    "abadbc" -   first non repeating character 'd'

Solution is below: 
*/

string Solution::solve(string A) {
    string ans = "";
    queue<char> q;
    map<char,int> mp;
    ans += A[0]; 
    q.push(A[0]);
    mp[A[0]] = 1;
    for(int i=1;i<A.length();i++)
    {
        if(mp[A[i]] == 0)
            mp[A[i]] = 1,q.push(A[i]);
        else
            mp[A[i]] = 2;
        while(!q.empty() && mp[q.front()] == 2)
            q.pop();
        if(!q.empty())
            ans += q.front();
        else
            ans += "#";
    }
    return ans;
}
