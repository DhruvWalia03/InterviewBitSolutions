/*
This Solution is By Dhruv Walia

Asked In:
AMAZON

Problem Description

You are given an array of N integers, A1, A2 ,..., AN and an integer B. Return the of count of distinct numbers in all windows of size B.
Formally, return an array of size N-B+1 where i'th element in this array contains number of distinct elements in sequence Ai, Ai+1 ,..., Ai+B-1.
NOTE:  if B > N, return an empty array.

Input 1:
 A = [1, 2, 1, 3, 4, 3]
 B = 3

Output 1:
 [2, 3, 3, 2]

Explanation 1:
 A=[1, 2, 1, 3, 4, 3] and B = 3

 All windows of size B are
 [1, 2, 1]
 [2, 1, 3]
 [1, 3, 4]
 [3, 4, 3]
 So, we return an array [2, 3, 3, 2].

Solution is below: 
*/

vector<int> Solution::dNums(vector<int> &A, int B) {

    map<int,int> mp;
    int i,n = A.size(),cnt = 0;
    vector<int> ans;
    for(i = 0; i < B; i++)
    {
        if(mp[A[i]] == 0)
            cnt++;
        mp[A[i]]++;
    }
    ans.push_back(cnt);
    for(i = B; i < n; i++)
    {
        if(mp[A[i]] == 0)
            cnt++;
        mp[A[i]]++;
        mp[A[i-B]]--;
        if(mp[A[i-B]] == 0)
            cnt--;
        ans.push_back(cnt);
    }
    return ans;
}