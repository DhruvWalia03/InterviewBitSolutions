/*
This Solution is By Dhruv Walia

Asked In:
LIV.AI

Given two arrays A & B of size N each.
Find the maximum N elements from the sum combinations (Ai + Bj) formed from elements in array A and  B.
For example if A = [1,2], B = [3,4], then possible pair sums can be 1+3 = 4  , 1+4=5  ,   2+3=5   ,    2+4=6
and maximum 2 elements are 6, 5

Example:
N = 4
a[]={1,4,2,3}
b[]={2,5,1,6}

Maximum 4 elements of combinations sum are
 10   (4+6), 
 9    (3+6),
 9    (4+5),
 8    (2+6)

Solution is below: 
*/

vector<int> Solution::solve(vector<int> &A, vector<int> &B) {
    
    priority_queue<pair<int, pair<int, int>>>  pq;
    map<pair<int,int>,int> mp;
    vector<int> v;
    int i, n = A.size();
    sort(A.begin(),A.end());
    sort(B.begin(),B.end());
    pq.push({A[n-1]+B[n-1],{n-1,n-1}});
    mp[{n-1,n-1}] = 1;
    i = 0;
    while(i < n)
    {
        auto p = pq.top();
        pq.pop();
        v.push_back(p.first);
        int l = p.second.first, r = p.second.second;
        if(l >= 0 && mp[{l-1,r}] == 0)
        {
            pq.push({A[l-1]+B[r],{l-1,r}});
            mp[{l-1,r}] = 1;
        }
        if(r >= 0 && mp[{l,r-1}] == 0)
        {
            pq.push({A[l]+B[r-1],{l,r-1}});
            mp[{l,r-1}] = 1;
        }
        i++;
    }
    return v;
}