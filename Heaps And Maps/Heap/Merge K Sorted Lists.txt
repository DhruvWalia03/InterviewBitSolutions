/*
This Solution is By Dhruv Walia

Asked In:
FLIPKART
AMAZON
GOOGLE

Merge k sorted linked lists and return it as one sorted list.

Example :
 1 -> 10 -> 20
 4 -> 11 -> 13
 3 -> 8 -> 9

will result in
 1 -> 3 -> 4 -> 8 -> 9 -> 10 -> 11 -> 13 -> 20

Solution is below: 
*/

/**
 * Definition for singly-linked list.
 * struct ListNode {
 *     int val;
 *     ListNode *next;
 *     ListNode(int x) : val(x), next(NULL) {}
 * };
 */

ListNode* Solution::mergeKLists(vector<ListNode*> &A) {
    
    if(A.size() == 0)
        return NULL;
    if(A.size() == 1)
        return A[0];
    priority_queue<pair<int,ListNode*>,vector<pair<int,ListNode*>>,greater<pair<int,ListNode*>> > pq;
    ListNode *head = new ListNode(0);
    ListNode *curr = head;
    for(int i = 0; i < A.size(); i++)
        pq.push({A[i]->val,A[i]});
    while(!pq.empty())
    {
        auto f = pq.top();
        ListNode *y = f.second;
        pq.pop();
        ListNode *next = y->next;
        curr->next = y;
        y->next = NULL;
        curr = y;
        if(next != NULL)
            pq.push({next->val,next});
    }
    return head->next;
}