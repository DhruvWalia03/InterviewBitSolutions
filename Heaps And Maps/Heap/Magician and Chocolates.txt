/*
This Solution is By Dhruv Walia

Problem Description

Given N bags, each bag contains Bi chocolates. There is a kid and a magician. In one unit of time, kid chooses a random bag i, eats Bi chocolates, then the magician fills the ith bag with floor(Bi/2) chocolates.
Find the maximum number of chocolates that kid can eat in A units of time.

NOTE: 
 floor() function returns the largest integer less than or equal to a given number.
 Return your answer modulo 109+7



Input 1:
 A = 3
 B = [6, 5]

Output 1:
 14

Explanation 1:
 At t = 1 kid eats 6 chocolates from bag 0, and the bag gets filled by 3 chocolates. 
 At t = 2 kid eats 5 chocolates from bag 1, and the bag gets filled by 2 chocolates. 
 At t = 3 kid eats 3 chocolates from bag 0, and the bag gets filled by 1 chocolate. 
 so, total number of chocolates eaten are 6 + 5 + 3 = 14

Solution is below: 
*/

int Solution::nchoc(int A, vector<int> &B) {
    priority_queue<int> pq;
    for(auto f: B)
        pq.push(f);
    int i = 0,ans = 0,mod = 1e9+7;
    while(i < A)
    {
        auto p = pq.top();
        ans = (ans%mod + p%mod)%mod;
        pq.pop();
        pq.push(p/2);
        i++;
    }
    return ans;
}